{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"../../Styles\";\nimport links from \"../../links\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CadastroScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    nome = _useState2[0],\n    setNome = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    senha = _useState6[0],\n    setSenha = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmarSenha = _useState8[0],\n    setConfirmarSenha = _useState8[1];\n  var handleCadastro = function handleCadastro() {};\n  var NavegeParaMeusPoj = function NavegeParaMeusPoj() {\n    navigation.navigate('Cadastro');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: {\n        uri: links.cadastroIcons\n      },\n      style: styles.logo\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nome\",\n      value: nome,\n      onChangeText: setNome\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"E-mail\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Senha\",\n      secureTextEntry: true,\n      value: senha,\n      onChangeText: setSenha\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirmar senha\",\n      secureTextEntry: true,\n      value: confirmarSenha,\n      onChangeText: setConfirmarSenha\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleCadastro,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Cadastrar\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","styles","links","CadastroScreen","navigation","nome","setNome","email","setEmail","senha","setSenha","confirmarSenha","setConfirmarSenha","handleCadastro","NavegeParaMeusPoj","navigate","container","uri","cadastroIcons","logo","input","button","buttonText"],"sources":["/workspace/GestorDeProjetos/App_em_Expo/src/screens/CadastroScreen/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Image, TouchableOpacity, Text } from 'react-native';\n\nimport styles from '../../Styles';\nimport links from '../../links';\n\nexport default function CadastroScreen({navigation}) {\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState('');\n  const [confirmarSenha, setConfirmarSenha] = useState('');\n\n  const handleCadastro = () => {\n    // implementar lÃ³gica de cadastro aqui\n  };\n\n  const  NavegeParaMeusPoj = ()=>{\n    navigation.navigate('Cadastro')\n  }\n  return (\n    <View style={styles.container}>\n      <Image\n        source={{ uri: links.cadastroIcons}}\n        style={styles.logo}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Nome\"\n        value={nome}\n        onChangeText={setNome}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"E-mail\"\n        value={email}\n        onChangeText={setEmail}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Senha\"\n        secureTextEntry\n        value={senha}\n        onChangeText={setSenha}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Confirmar senha\"\n        secureTextEntry\n        value={confirmarSenha}\n        onChangeText={setConfirmarSenha}\n      />\n      <TouchableOpacity style={styles.button} onPress={handleCadastro}>\n        <Text style={styles.buttonText}>Cadastrar</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAGxC,OAAOC,MAAM;AACb,OAAOC,KAAK;AAAoB;AAAA;AAEhC,eAAe,SAASC,cAAc,OAAe;EAAA,IAAbC,UAAU,QAAVA,UAAU;EAChD,gBAAwBJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BK,IAAI;IAAEC,OAAO;EACpB,iBAA0BN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BO,KAAK;IAAEC,QAAQ;EACtB,iBAA0BR,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BS,KAAK;IAAEC,QAAQ;EACtB,iBAA4CV,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjDW,cAAc;IAAEC,iBAAiB;EAExC,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS,CAE7B,CAAC;EAED,IAAOC,iBAAiB,GAAG,SAApBA,iBAAiB,GAAO;IAC7BV,UAAU,CAACW,QAAQ,CAAC,UAAU,CAAC;EACjC,CAAC;EACD,OACE,MAAC,IAAI;IAAC,KAAK,EAAEd,MAAM,CAACe,SAAU;IAAA,WAC5B,KAAC,KAAK;MACJ,MAAM,EAAE;QAAEC,GAAG,EAAEf,KAAK,CAACgB;MAAa,CAAE;MACpC,KAAK,EAAEjB,MAAM,CAACkB;IAAK,EACnB,EACF,KAAC,SAAS;MACR,KAAK,EAAElB,MAAM,CAACmB,KAAM;MACpB,WAAW,EAAC,MAAM;MAClB,KAAK,EAAEf,IAAK;MACZ,YAAY,EAAEC;IAAQ,EACtB,EACF,KAAC,SAAS;MACR,KAAK,EAAEL,MAAM,CAACmB,KAAM;MACpB,WAAW,EAAC,QAAQ;MACpB,KAAK,EAAEb,KAAM;MACb,YAAY,EAAEC;IAAS,EACvB,EACF,KAAC,SAAS;MACR,KAAK,EAAEP,MAAM,CAACmB,KAAM;MACpB,WAAW,EAAC,OAAO;MACnB,eAAe;MACf,KAAK,EAAEX,KAAM;MACb,YAAY,EAAEC;IAAS,EACvB,EACF,KAAC,SAAS;MACR,KAAK,EAAET,MAAM,CAACmB,KAAM;MACpB,WAAW,EAAC,iBAAiB;MAC7B,eAAe;MACf,KAAK,EAAET,cAAe;MACtB,YAAY,EAAEC;IAAkB,EAChC,EACF,KAAC,gBAAgB;MAAC,KAAK,EAAEX,MAAM,CAACoB,MAAO;MAAC,OAAO,EAAER,cAAe;MAAA,UAC9D,KAAC,IAAI;QAAC,KAAK,EAAEZ,MAAM,CAACqB,UAAW;QAAA,UAAC;MAAS;IAAO,EAC/B;EAAA,EACd;AAEX"},"metadata":{},"sourceType":"module"}